SuperTux TODO
=============

This is a list of tasks and issues that might be worth to implement or
fix. This list is however not an authorative list of things that must
be done, its a collection of random things that pop up during
development, therefore not everything in here might be well thought
out or worth to implement. Use your brain before implementing anything
on this list and always think about how useful a new feature would be
in the context of the whole game or if a potential performance
enhanchment, actually enhanchmes anything at all.

Coding Standard Stuff
=====================

* make code clean: "-O2", "-g3",
                     "-ansi",
                     "-pedantic",
                     "-Wall",
                     "-Wextra",
                     "-Wnon-virtual-dtor",
                     "-Weffc++",
                     "-Wconversion",
                     "-Werror",
                     "-Wshadow",
                     "-Wcast-qual",
                     "-Winit-self", # only works with >= -O1
                     "-Wno-unused-parameter",

* remove overuse of multi-inheritance 

* remove overuse of friend'ship

* maybe mark interfaces as interfaces (ISerializable or SerializableInterface)

* split files with multiple classes into multiple files with one class each

* static vs anonymous namespace

* check the code with Valgrind

* use Vector in Physics for 'a' and 'v'

* replace random generator with mersene twister and/or move to external/

* write/finish scripts for include sorting and include guard checking that
  can be run automatically

* md5.hpp and random_generator.hpp could go to external/

* write scripts to automatically check for:

  - all includes are relative to top level dir

  - include guards are proper

TODO
====

* GameObject::RemoveListenerListEntry: Ughs, somebody trying to
  implement a list class within in the GameObject?!

* add --datadir DIR (data/) and --userdir DIR (~/.supertux/)

* make gravity a constant

* funky side effect of too much global variables: when having a
  savegame with large or firetux and then starting that game, Tux in
  the menu background will grow and be visible that way for a fraction
  of a second

* rename Vector -> Vector2f

* get rid of global SDL_Screen* screen variable

* identify all global variables and make them ugly (g_ or globals::)

* get rid of SCREEN_WIDTH/SCREEN_HEIGHT

* is version.h actually needed?

* resolution menu entry moves the wrong way around

* having dictionary_manager in Lisp is extremely ugly

* enforce proper naming of files to match their class

* get rid of NDEBUG and conditional compilation, these should be
  reserved for a few tiny cases, not spread all over the code

* split particlesystem_interactive

* collect all manager classe into globals.hpp

* more moving directories around?

addon/	
audio/	
control/
gui/	
lisp/	
math/
physfs/	
sprite/	
util/
video/
squirrel/
  for generic squirrel code
supertux/
  worldmap/
  trigger/
  scripting/
    for scripting wrapper code
  badguy/
  object/

* implement PNG screenshot

* having hitbox in Sprite is fugly

* write decal object

* implement surface and/or sprite scaling (MipMaps?)

* add code that compares the last Log line with the current, if they
  are the same reject them and just output something like:

  * last line has been repeated X times

* file naming is inconsistent: some times we use '_' to separate
  words, sometimes we don't

* implement: http://standards.freedesktop.org/basedir-spec/basedir-spec-0.6.html

* workaround for Ubuntu pulseaudio/OpenAL brokeness:

$ cat ~/.alsoftrc
drivers = oss

* peaking up/down doesn't work properly

* peaking left/right should make Tux look into that direction (up/down to, needs new sprites)

* add pipe graphics that makes a 90 degree turn

* keep possible future SDL1.3 upgrade in mind

* cleanup scripting interface

* remove cloud tiles, replace with decal

* option menu has text overlap in "aspect ratio"

* jumping up from an enemy doesn't make a sound

* add support for automatic scrolling backgrounds

* add direct reading of Vector2f to Reader/lisp

* replace bell with 'reset block', that starts to glow once bumped
  into (or something different)

* refactor Camera code, break ugly long functions into pieces and such

* allow fully custom magnification levels from command line (maybe GUI
  to if there is a proper/easy way to let the user enter numbers)
  (--magnification or -g WIDTHxHEIGHT:ASPECTX:ASPECTY@MAGNIFICATION)

* use AnchorPoint in Background instead of Alignment

* allow gradients to parallax scroll like Background (make it optional)

* add multicolored gradients (see Windstille source code, which can deal with Gimp gradients)

* fix alpha blending in the SDL renderer, currently all sprites (Tux,
  etc.) appear transparent

* position of statistics text on the worldmap doesn't scale properly with resolution it seems

* gluBuild2DMipmaps leads to blurriness, maybe lack of magic offset
  (0.375f, 0.375f, 0.0f) or something else


Scenegraph and Physics Engine Restructuring
===========================================

* random idea to restructure engine stuff (might lead to nicer code
  and easier scriptability and a need to rewrite lots of stuff...):

class SomeBadGuy : public PhysicsCallbackListener // or use boost::function
{
private:
      PhysicsPtr box;
      SpritePtr sprite;
        
public:
      SomeBadGuy(Engine& engine)  
      {
         box    = engine.physics().create_box(Rectf(0,0,32,32));
         box->register_listener(this);
         sprite = engine.graphics().create_and_add_sprite("Foobar");
      }

      void update(float delta)
      {
         // not much to do, as most stuff is done internally in the engine
         if (dead)
         {
                  sprite->replace_with("Foobar_dead");
         }
         else
         {
                sprite->hide();
                sprite->set_pos(box->get_pos());
        }
      }

      // no more draw(), done by the scene graph

      void on_collision(CollisionData data)
      {
        // respond
      }
};

Subversion->Git/Mercurial/Bzr Move
==================================

* right now a switch doesn't seem to be worth it

* core issue right now isn't SVN, but old SVN version on lethargik.org
  (lacks merge tracking and issues with viewvc)

* cleanup SVN to make import into other version control systems possible:

 - Should we merge trunk/supertux-milestone1 and trunk/supertux when switching to Git/Hg/...?

Mistakes: incorrect branch creation: r5201-5207

tags/start           # unknown
tags/supertux        # unknown
tags/supertux_0_1_0
tags/supertux_0_1_1
tags/supertux_0_1_2
tags/supertux_0_1_3

branches/cobble      # unknown
branches/milestone1  # unknown
branches/new-collision-detection # unknown
branches/README      # documentation that will be lost in conversion
branches/supertux    # unknown
branches/supertux_0_1_1_branch
branches/supertux-box2d  # mathnerd (trash)
branches/supertux-editor-newdrawing # editor
branches/supertux-editor-newdrawing2 # editor
branches/supertux-milestone1-olpc    # supertux-milestone1
branches/supertux-milestone2-grumbel # supertux
branches/supertux-nogl               # supertux(?)
branches/supertux-sharp              # another supertux editor
branches/unison-video                # ???
branches/vendor                      # ??? CVS crap

trunk/cobble          # some editor?
trunk/CVSROOT         # ??? CVS crap
trunk/htdocs          # htdocs
trunk/jnrcol
trunk/media
trunk/SDL_tty
trunk/setup2x
trunk/supertux
trunk/supertux-editor
trunk/supertux-milestone1
trunk/supertux-portable
trunk/supertux-sharp
trunk/wiz-test


Potential Git Issues
====================

* lack of sparse/narrow/shallow checkout, this means initial checkout
  will be 200MB instead of 100MB

* no free hoster that allows >1GB repositories (haven't checked all,
  but those I did came out way short) -> could use lethargik.org

* some free hosters that might allow >1GB repositories don't allow
  having multiple repositories

* git submodule doesn't seem to be quite ready to replace our
  trunk/supertux, trunk/supertux-editor, trunk/media/, ... layout as
  it for example doesn't support automatic tracking of HEAD from the
  remote repositories, it also feels rather hacky and not properly
  integrated into git

* lack of metadata versioning, if you delete a branch in git that you
  haven't merged, then its gone after the next gc/repack (+ two weeks
  time limit it seems), in SVN on the other side you can checkout the
  way the tree was at a specific date, its impossible to lose history
  unless you hack the repository

svn2bzr.py
==========

Committed revision 5727
Committed revision 5728
Committed revision 5729
Committed revision 5730
Traceback (most recent call last):
  File "./svn2bzr.py", line 194, in <module>
    main()
  File "./svn2bzr.py", line 187, in main
    log=log)
  File "./svn2bzr.py", line 88, in svn2bzr
    creator.run()
  File "/mnt/bzr/svn2bzr/branchcreator.py", line 622, in run
    entries = self.filter_entries(entries)
  File "/mnt/bzr/svn2bzr/branchcreator.py", line 671, in filter_entries
    entries = self.filter_moves(entries)
  File "/mnt/bzr/svn2bzr/branchcreator.py", line 727, in filter_moves
    entries = self.filter_simult_fren_dirmove(entries)
  File "/mnt/bzr/svn2bzr/branchcreator.py", line 784, in filter_simult_fren_dirmove
    newfname = svnrelpath(newdpth, newfpth)
  File "/mnt/bzr/svn2bzr/branchcreator.py", line 60, in svnrelpath
    raise errors.PathNotChild(path, base)
bzrlib.errors.PathNotChild: Path "trunk/media/images/creatures/mr_cherry/cherrybomb.xcf" is not a child of path "trunk/media/images/creatures/mr_bomb"

Random Notes
============

* calculate the size of an background image that should fill the screen:

  image_size = (1 - parallax_speed) * screen_size + level_size * parallax_speed

def calc(parallax, screen, tiles):
    return (1 - parallax) * screen + parallax * tiles * 32


Supported Resolution
====================

SuperTux shall support resolutions from 640x480 to 1280x800 at a magnification of 1x.
For resolutions higher, such as 2560x1600, upscaling will be used.
For resolutions smaller, like 320x240 downscaling will be used.

Higher resolution graphics for 2x maginification might be provided.
Lower res graphics for 0.5x maginification might be provided as well.

Resolution and magnification can be freely configured by the user within the given limits.

# EOF #
